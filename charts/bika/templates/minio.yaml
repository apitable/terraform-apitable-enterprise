{{- if .Values.minio.enabled }}
apiVersion: v1
kind: Service
metadata:
  name: bika-minio
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: 9000
    targetPort: 9000
    name: "9000"
  - port: 9001
    targetPort: 9001
    name: "9001"
  selector:
    app: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bika-minio
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
      - name: minio
        image: minio/minio:RELEASE.2024-06-13T22-53-53Z
        command: ["minio", "server", "/data", "--console-address", ":9001"]
        ports:
        - containerPort: 9000
          name: s3
          protocol: TCP
        - containerPort: 9001
          name: web
          protocol: TCP
        volumeMounts:
        - name: data
          mountPath: /data
        env:
        - name: MINIO_ROOT_USER
          value: bika  
        - name: MINIO_ROOT_PASSWORD
          value: bikabika
        - name: MINIO_ACCESS_KEY
          value: bika
        - name: MINIO_SECRET_KEY
          value: bikabika
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /minio/health/cluster/read
            port: 9000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: bika-minio-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: bika-minio-pvc
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ .Values.minio.storageClass }}
  resources:
    requests:
      storage: 10Gi
{{- end }}