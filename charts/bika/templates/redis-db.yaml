apiVersion: v1
kind: Service
metadata:
  name: redis-master
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: 6379
  selector:
    app: redis
    role: master
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-master
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
      role: master
  template:
    metadata:
      labels:
        app: redis
        role: master
    spec:
      containers:
      - name: redis-master
        image: bitnami/redis:7.0.15
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: 'yes' 
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: data
          mountPath: /bitnami/redis/data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.redis.storageClass }}
      resources:
        requests:
          storage:  {{ .Values.redis.storage }} 

---        
apiVersion: v1
kind: Service
metadata:
  name: redis-slave
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: 6379
  selector:
    app: redis
    role: slave
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-slave
  namespace: {{ .Values.namespace }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app: redis
      role: slave
  template:
    metadata:
      labels:
        app: redis
        role: slave
    spec:
      containers:
      - name: redis-slave
        image: bitnami/redis:7.0.15
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: 'yes'
        - name: REDIS_MASTER_HOST
          value: redis-master
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: data
          mountPath: /bitnami/redis/data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.redis.storageClass }}
      resources:
        requests:
          storage:  {{ .Values.redis.storage }} 
