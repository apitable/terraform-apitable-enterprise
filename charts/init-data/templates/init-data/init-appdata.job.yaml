{{- if .Values.mysql.enabled -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: init-appdata
  namespace: {{.Release.Namespace}}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "{{ if .Values.hooks.removeOnSuccess }}hook-succeeded,{{ end }}before-hook-creation"
    "helm.sh/hook-weight": "30"
spec:
  {{- if .Values.hooks.activeDeadlineSeconds }}
  activeDeadlineSeconds: {{ .Values.hooks.activeDeadlineSeconds }}
  {{- end}}
  #completionMode: Indexed
  ttlSecondsAfterFinished: 180
  template:
    spec:
      {{- if .Values.container.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.container.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.hooks.initCheck.tolerations }}
      tolerations:
      {{ toYaml .Values.hooks.initCheck.tolerations | indent 8 }}
      {{- end }}
      containers:
        - name: init-appdata
          image: {{ .Values.images.initAppData }}
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_HOST
              value: {{.Values.mysql.host}}
            - name: MYSQL_PORT
              value: "{{.Values.mysql.port}}"
            - name: MYSQL_USERNAME
              value: {{.Values.mysql.username}}
            - name: MYSQL_PASSWORD
              value: {{.Values.mysql.password}}
            - name: MYSQL_DATABASE
              value: {{.Values.mysql.database}}
            - name: DATABASE_TABLE_PREFIX
              value: {{.Values.mysql.tablePrefix}}
            - name: AWS_ENDPOINT
              value: "{{.Values.minio.schema}}://{{.Values.minio.host}}:{{.Values.minio.port}}"
            - name: AWS_ACCESS_KEY
              value: {{.Values.minio.accessKey}}
            - name: AWS_ACCESS_SECRET
              value: {{.Values.minio.secretKey}}
            - name: AWS_REGION
              value: {{.Values.minio.region}}
            - name: OSS_BUCKET_NAME
              value: {{.Values.minio.bucket}}
            - name: ASSETS_BUCKET
              value: {{.Values.minio.bucket}}
            - name: OSS_ENABLED
              value: "true"
            - name: LOADER_TEMPLATE_SPACE_ID
              value: "spcNTxlv8Drra"
            - name: LOADER_WIDGET_SPACE_ID
              value: "spcNTxlv8Drra"
            - name: SKIP_WIDGET_CENTER_LOADER
              value: "{{.Values.initAppData.skipWidgetCenterLoader}}"
            - name: INIT_TEST_ACCOUNT_ENABLED
              value: "{{.Values.initAppData.init_test_account_enabled}}"
          envFrom:
            - configMapRef:
                name: init-appdata-env
                optional: false

          resources:
{{ toYaml .Values.global.resources | indent 12 }}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.global.imagePullSecrets | indent 8 }}
      {{- end }}
      restartPolicy: Never
  backoffLimit: 10
{{- end }}
