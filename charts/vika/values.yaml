
## @param version Global version
version: latest

## @param license code for enterprise edition
license: ""

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##
## @param global.imageRegistry [string] Global Docker image registry
## @param global.imagePullSecrets [array] Global Docker registry secret names as an array
## @param global.defaultStorageClass [string] Global StorageClass for Persistent Volume(s)
## @skip global.env  [object] Global env for vika application
##
global:
  imageRegistry: ""
  defaultStorageClass: ""
  imagePullSecrets: [ "regcred" ]
  env: 
    EDITION: "vika-saas"
    MYSQL_DATABASE: "apitable"
    MYSQL_PASSWORD: "apitable@com"
    MYSQL_USERNAME: "root"
    MYSQL_PORT: "3306"
    MYSQL_HOST: "mysql-primary"
    DATABASE_TABLE_PREFIX: "apitable_"
    RABBITMQ_HOST: rabbitmq
    RABBITMQ_PASSWORD: 7r4HVvsrwP4kQjAgj8Jj
    RABBITMQ_PORT: "5672"
    RABBITMQ_USERNAME: user
    RABBITMQ_VHOST: /
    REDIS_DB: "4"
    REDIS_HOST: redis-master
    REDIS_PASSWORD: UHWCWiuUMVyupqmW4cXV
    REDIS_PORT: "6379"
    AWS_ACCESS_KEY: "admin"
    AWS_ACCESS_SECRET: "73VyYWygp7VakhRC6hTf"
    AWS_ENDPOINT: "http://minio:9000"
    AWS_REGION: "us-east-1"
    ASSETS_BUCKET: assets
    ASSETS_URL: assets
    OSS_HOST: "/assets"
    SERVER_DOMAIN: ""
    DATABUS_SERVER_BASE_URL: "http://databus-server:8625"

## @section app image 
## @param images.registry [default: REGISTRY_NAME] vika image registry
## @param images.repository [default: REPOSITORY_NAME/vika] vika image repository
## @param images.username registry username  
## @param images.password registry username 
## @param images.pullPolicy image pull policy , ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry
## @param images.app [object] image tag (immutable tags are recommended)
images:
  registry: docker.vika.ltd
  username: "robot$public"
  password: "kYO5yMlm3ATE6ws40uMdO1fL2pfbpyej"
  pullPolicy: IfNotPresent
  app:
    backend_server: latest
    init_db: latest
    room_server: latest
    socket_server: latest
    fusion_server: latest
    nest_rest_server: latest
    web_server: latest-op
    init_settings: latest
    openresty: 1.21.4.1-4-buster-fat
    imageproxy_server: latest
    space_job_executor: v0.0.1-alpha_build3
    init_appdata: latest
    databus_server: latest
  repository: 
    common: "vikadata/vika"
    app:
      init_settings: "vikadata/vika-ee"
      init_appdata: "vikadata/vika-ce"
      openresty: "vikadata/openresty"

## Experimental feature, not supported yet
## @skip pxc-operator
pxc-operator:
  replicaCount: 1

## Experimental feature, not supported yet
## @skip pxc-db
pxc-db:
  enabled: false
  allowUnsafeConfigurations: true
  pxc:
    enabled: true
    size: 1
    resources:
      requests:
        memory: "0.5G" # 4G
        cpu: "300m" # 2
    persistence: 
      size: 3Gi
      storageClass: ""
    configuration: |
      [mysqld]
      sql_mode=NO_ENGINE_SUBSTITUTION
      sort_buffer_size=2M
      max_connections=1000
      max_allowed_packet=1024M
      log_bin_trust_function_creators=on
      innodb_dedicated_server=on
      innodb_flush_log_at_trx_commit=2
      lower_case_table_names=1
      innodb_redo_log_capacity=8589934592
      [sst]
      xbstream-opts=--decompress
      [xtrabackup]
      compress=lz4
    # advancedAffinity:
    # tolerations:
    backup:
      enabled: false
      pitr:
        enable: false
        storageName: ""
  proxysql:
    enabled: true
    size: 1
    resources:
      requests:
        memory: 500m
        cpu: 300m
    persistence:
      storageClass: ""

## @section mysql parameters
## @param mysql.enabled Enable mysql
## @param mysql.fullnameOverride mysql deployment name, Don't replace it.
## @param mysql.auth [object] default mysql init auth
## @param mysql.architecture MySQL architecture (`standalone` or `replication`)
## @param mysql.primary.persistence.size  Persistent Volume size
## @param mysql.secondary.persistence.size  Persistent Volume size 
mysql:
  enabled: true
  fullnameOverride: "mysql"
  auth:
    rootPassword: "apitable@com"
    password: "apitable@com"
    replicationPassword: "6sg8vgDFcwWXP386EiZB"
    database: "apitable"
  architecture: replication
  primary:
    persistence:
      size: 10Gi
    ## @param mysql.primary.configuration [string] Configure MySQL Primary with a custom my.cnf file
    ## ref: https://mysql.com/kb/en/mysql/configuring-mysql-with-mycnf/#example-of-configuration-file
    ##
    configuration: |
      [mysqld]
      default_authentication_plugin=mysql_native_password
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mysql
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      datadir=/bitnami/mysql/data
      tmpdir=/opt/bitnami/mysql/tmp
      max_allowed_packet=16M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      log-error=/opt/bitnami/mysql/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      slow_query_log=0
      slow_query_log_file=/opt/bitnami/mysql/logs/mysqld.log
      long_query_time=10.0
      sql_mode=NO_ENGINE_SUBSTITUTION
      max_allowed_packet=1073741824
      mysqlx_max_allowed_packet=1073741824

      [client]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mysql/lib/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
  secondary:    
    persistence:
      size: 10Gi
    ## @param mysql.secondary.configuration [string] Configure MySQL Primary with a custom my.cnf file
    ## ref: https://mysql.com/kb/en/mysql/configuring-mysql-with-mycnf/#example-of-configuration-file
    ##
    configuration: |
      [mysqld]
      default_authentication_plugin=mysql_native_password
      skip-name-resolve
      explicit_defaults_for_timestamp
      basedir=/opt/bitnami/mysql
      plugin_dir=/opt/bitnami/mysql/lib/plugin
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      datadir=/bitnami/mysql/data
      tmpdir=/opt/bitnami/mysql/tmp
      max_allowed_packet=1024M
      bind-address=0.0.0.0
      pid-file=/opt/bitnami/mysql/tmp/mysqld.pid
      log-error=/opt/bitnami/mysql/logs/mysqld.log
      character-set-server=UTF8
      collation-server=utf8_general_ci
      slow_query_log=0
      slow_query_log_file=/opt/bitnami/mysql/logs/mysqld.log
      long_query_time=10.0
      sql_mode=NO_ENGINE_SUBSTITUTION
      max_allowed_packet=1073741824
      mysqlx_max_allowed_packet=1073741824
      sort_buffer_size=2M
      max_connections=10000

      [client]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock
      default-character-set=UTF8
      plugin_dir=/opt/bitnami/mysql/lib/plugin

      [manager]
      port=3306
      socket=/opt/bitnami/mysql/tmp/mysql.sock

## @section redis parameters
## @param redis.enabled Enable redis
## @param redis.fullnameOverride redis deployment name, Don't replace it.
## @param redis.global.redis.password Global Redis&reg; password (overrides `auth.password`)
## @param redis.master.persistence.size  Persistent Volume size
## @param redis.replica.persistence.size  Persistent Volume size 
## @param redis.replica.replicaCount Number of Redis&reg; replicas to deploy
redis:
  enabled: true
  fullnameOverride: "redis"
  global:
    redis:
      password: UHWCWiuUMVyupqmW4cXV
  master:
    persistence:
      size: 5Gi
  replica:
    persistence:
      size: 5Gi
    replicaCount: 1

## @section rabbitmq parameters
## @param rabbitmq.enabled Enable rabbitmq
## @param rabbitmq.fullnameOverride redis deployment name, Don't replace it.
## @param rabbitmq.auth [object] default rabbitmq init auth
## @param rabbitmq.persistence.size  Persistent Volume size
rabbitmq:
  enabled: true
  fullnameOverride: "rabbitmq"
  persistence:
    size: 10Gi
  auth:
    username: user
    password: "7r4HVvsrwP4kQjAgj8Jj"
  
## @section minio parameters
## @param minio.enabled Enable minio
## @param minio.fullnameOverride deployment name, Don't replace it.
## @param minio.persistence.size  Persistent Volume size
## @param minio.mode  MinIO&reg; server mode (`standalone` or `distributed`)
## @param minio.auth.rootPassword default minio init auth

minio:
  enabled: true
  fullnameOverride: "minio"
  persistence:
    size: 10Gi
  mode: standalone
  auth:
    rootPassword: 73VyYWygp7VakhRC6hTf

## @section app clean cron job
## @param cron.enabled Enable app clean up cron
cron:
  enabled: false

## @section Deployment affinity is related to node scheduling
## @param container.affinity app affinity
## @param container.tolerations app tolerations
## @param container.node_selector app node_selector
container:
  affinity: {}
  tolerations: []
  node_selector: {}

## @section Deployment parameters

## @param hasAutoReloadedConfigMap Indicates whether auto-reloading of ConfigMap is enabled.
hasAutoReloadedConfigMap: true

## @param pricing_host The base URL for the pricing host
pricing_host: "http://web-server"

## @param default_server_host The base URL for the default server host.
default_server_host: "http://web-server"

## @param minio_host The base URL for the MinIO host.
minio_host: "http://minio:9000"

## @param has_load_balancer Specifies whether a load balancer is enabled or not.
has_load_balancer: false

## @param app.web_server [object] web-server deployment configuration params
## @param app.backend_server [object] backend-server deployment configuration params
## @param app.room_server [object] room-server deployment configuration params
## @param app.fusion_server [object] fusion-server deployment configuration params
## @param app.socket_server [object] socket-server deployment configuration params
## @param app.nest_rest_server [object] nest-rest-server deployment configuration params
## @param app.imageproxy_server [object] imageproxy-server deployment configuration params
## @param app.databus_server [object] databus-server deployment configuration params
## @param app.openresty [object] openresty deployment configuration params
## @param app.ai_server [object] ai-server deployment configuration params. Non-standard featrue, do not enable it .
## @param app.document_server [object] document-server deployment configuration params
## @param app.dingtalk_server [object] dingtalk-server deployment configuration params
## @param app.job_admin_server [object] job-admin deployment configuration params
## @param app.space_job_executor [object] job-admin deployment configuration params
## @param app.init_data [object] init data job
## @skip  app deployment Description
app:
  web_server:
    replicas: 2
    requests:
      cpu: 100m
      memory: 1024Mi
    ## Example:
    ## limits:
    ##    cpu: 250m
    ##    memory: 256Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env:
      API_PROXY: "http://backend-server:8081"
      BACKEND_INFO_URL: "http://backend-server:8081/api/v1/client/info"
      TEMPLATE_PATH: "./static/web_build/index.html"
      WEB_SERVER_PORT: "8080"    
  backend_server:
    replicas: 2
    requests:
      cpu: 1000m
      memory: 1024Mi
    limits:
      cpu: 4000m
      memory: 8192Mi
    sensorsFilebeat:
      enabled: false
      hosts: [ "logstash:5044" ]
    env:
      CORS_ORIGINS: "*"
      LOGGER_MAX_HISTORY_DAYS: "1"
      TEMPLATE_SPACE: "spcNTxlv8Drra"
      SOCKET_DOMAIN: "http://socket-server:3001/socket"
      FEISHU_APP_ENABLE: "true"
      SPRINGFOX_ENABLED:  "true"
      SWAGGER_ENABLED: "true"
      DECORATOR_ENABLED: "true"
      ZIPKIN_ENABLED: "false"
      # GRPC
      NEST_GRPC_ADDRESS: "static://room-server:3334"
      BACKEND_GRPC_PORT: "8083"
      # socketio starter
      SOCKET_URL: "http://socket-server:3002"
      SOCKET_RECONNECTION_ATTEMPTS: "10"
      SOCKET_RECONNECTION_DELAY: "500"
      SOCKET_TIMEOUT: "5000"
      # oss starter
      OSS_ENABLED: "true"
      # IDaaS starter
      IDAAS_ENABLED: "false"
      # Enterprise Env
      SESSION_NAMESPACE: "vikadata:session"
      DEFAULT_LOCALE: "zh-CN"
      EMAIL_PERSONAL: "维格表"
      # user cooling-off time, unit: day
      COOLING_OFF_PERIOD: "30"
      # scheduler
      # close user job cron string, run at 0:00 every day
      CLOSE_PAUSED_USER_CRON: "0 0 0 * * ?"
      # disable heartbeat job cron
      HEARTBEAT_CRON: "-"
      SKIP_AUTOMATION_RUN_NUM_VALIDATE: "true"

      DATABUS_SERVER_BASE_URL: "http://databus-server:8625"
      SKIP_REGISTER_VALIDATE: "true"     # @add_tf_local for private mode
      BILLING_SELFHOST_ENABLED: "true"   # @add_tf_local for private mode
  room_server:
    replicas: 2
    ## Maximum number of replicas to scale out
    max_replicas: 30
    ## Target CPU utilization percentage
    cpu_utilization_percentage: 500
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    rolling_update_max_unavailable: "25%"
    rolling_update_max_surge: "25%"
    env:
      APPLICATION_NAME: "ROOM_SERVER"
      SERVER_PORT: "3333"
      INSTANCE_COUNT: "1"
      LOG_LEVEL: "info"
      BACKEND_BASE_URL: "http://backend-server:8081/api/v1/"
      SOCKET_GRPC_URL: "socket-server:3007"
      OSS_TYPE: "QNY1"
      ZIPKIN_ENABLED: "false"
      ROBOT_OFFICIAL_SERVICE_SLUG: "vika"
      DEFAULT_LANGUAGE: "en-US"
      ENABLE_QUEUE_CONSUMER_WORKER: "true"
  socket_server:
    replicas: 2
    max_replicas: 5
    cpu_utilization_percentage: 500
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env:
      APPLICATION_NAME: "SOCKET_SERVER"
      ENABLE_SOCKET: "true"
      SERVER_PORT: "3001"
      INSTANCE_COUNT: "1"
      LOG_LEVEL: "info"
      ZIPKIN_ENABLED: "false"
      NEST_HEALTH_CHECK_CRON_EXPRESSION: "*/3 * * * * *"
      NEST_HEALTH_CHECK_TIMEOUT: "1000"
      ROOM_GRPC_URL: "room-server:3334"
      BACKEND_GRPC_URL: "backend-server:8083"
      GRPC_TIMEOUT_MAX_TIMES: "3"
      NODE_MEMORY_RATIO: "80"
  fusion_server:
    enabled: true
    replicas: 2
    ## Maximum number of replicas to scale out
    max_replicas: 30
    ## Target CPU utilization percentage
    cpu_utilization_percentage: 500
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env:
      APPLICATION_NAME: "FUSION_SERVER"
      INSTANCE_COUNT: "1"
      LOG_LEVEL: "info"
      BACKEND_BASE_URL: "http://backend-server:8081/api/v1/"
      SOCKET_GRPC_URL: "socket-server:3007"
      OSS_TYPE: "QNY1"
      OSS_CACHE_TYPE: ""
      ZIPKIN_ENABLED: "false"
      ROBOT_OFFICIAL_SERVICE_SLUG: "vika"
  nest_rest_server:
    enabled: true
    replicas: 2
    max_replicas: 20
    cpu_utilization_percentage: 500
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env:
      APPLICATION_NAME: "NEST_REST_SERVER"
      INSTANCE_COUNT: "1"
      LOG_LEVEL: "info"
      BACKEND_BASE_URL: "http://backend-server:8081/api/v1/"
      SOCKET_GRPC_URL: "socket-server:3007"
      OSS_TYPE: "QNY1"
      OSS_CACHE_TYPE: ""
      ZIPKIN_ENABLED: "false"
      ROBOT_OFFICIAL_SERVICE_SLUG: "vika"
  document_server:
    enabled: false
    max_replicas: 20
    replicas: 2
    cpu_utilization_percentage: 500
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env:
      APPLICATION_NAME: "DOCUMENT_SERVER"
      ENABLE_HOCUSPOCUS: "true"
      INSTANCE_COUNT: "1"
      LOG_LEVEL: "info"
      BACKEND_BASE_URL: "http://backend-server:8081/api/v1/"
      SOCKET_GRPC_URL: "socket-server:3007"
      OSS_TYPE: "QNY1"
      OSS_CACHE_TYPE: ""
      ZIPKIN_ENABLED: "false"
      ROBOT_OFFICIAL_SERVICE_SLUG: "vika"
  openresty:
    replicas: 2
    worker_processes: auto
    svc_annotations: 
      "helm.sh/hook-weight": "100"
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    has_extend_tls: false
    disallowRobots: false
    tls_crt: ""
    tls_key: ""
 
  databus_server:
    enabled: true
    replicas: 2
    max_replicas: 10
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env:
      BACKEND_BASE_URL: "http://backend-server:8081/api/v1/"
      OSS_HOST: "/assets"
 
  imageproxy_server:
    enabled: true   # @add_tf_local for private mode
    replicas: 2 
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env:
      BASEURL: "http://minio:9000"
      TZ: "Asia/Shanghai"
      IMAGEPROXY_CACHE: "/tmp/imageproxy"

  job_admin_server:
    enabled: false
    replicas: 1 
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env: 
      # SMTP Email push configuration
      MAIL_HOST: "smtp.feishu.cn"

  space_job_executor:
    enabled: false
    replicas: 1 
    env: 
      JOB_ADMIN_ADDRESS: "http://job-admin-server:8080/job-admin" 
      BACKEND_URL: "http://backend-server:8081"
      VIKA_ENABLED: "true"
      DINGTALK_ENABLED: "true"

  ai_server:
    enabled: false
    replicas: 2
    max_replicas: 5
    hasAiCopilot: false
    sc:
      size: 10Pi
      volumeAttributes:
        # format : namespace+ai_server , eg:  vika-app_ai_server
        subPath: "ai_server"  
    pvCsi:
      ## If you use longhorn, you need to create pv in advance
      storageClassName: ""
      fsType: "juicefs"
      driver: "csi.juicefs.com"
      nodePublishSecretRef: 
        name: "juicefs-sc-secret"
        namespace: "vika-opsbase"
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env:
      COPILOT_CHROMA_FOLDER: "aitable_copilot"

  dingtalk_server:
    replicas: 1
    enabled: false
    requests:
      cpu: 100m
      memory: 1024Mi
    limits:
      cpu: 1000m
      memory: 2048Mi
    env:
      MYSQL_DATABASE: "vikadata-dingtalk"
      REDIS_DB: 9
      SPRINGFOX_ENABLED: "true"
      SWAGGER_ENABLED: "true"
      DECORATOR_ENABLED: "true"
      BACKEND_BASE_URL: "http://backend-server:8081"
      BACKEND_BASE_PATH: "/api/v1"
      DINGTALK_GRPC_PORT: "9092"

  init_data:
    enabled: true   # @add_tf_local for private mode

## Experimental feature, not supported yet
## @skip tidb-operator 
tidb-operator:
  enabled: false
  clusterScoped: false

## Experimental feature, not supported yet
## @skip tidb 
tidb:
  enabled: false
  # # The deployed cluster topology by default has three PD Pods,
  # three TiKV Pods, and two TiDB Pods. 
  # If the number of Kubernetes cluster nodes is less than three,
  # one PD Pod goes to the Pending state, and neither TiKV Pods nor TiDB Pods are created.
  # When the number of nodes in the Kubernetes cluster is less than three,
  # to start the TiDB cluster,
  # you can reduce the number of PD Pods in the default deployment to 1.
  # For configuration information, see this page:
  # https://github.com/pingcap/tidb-operator/blob/v1.6.0/docs/api-references/docs.md
  cluster:
    version: master
    pd:
      image: pingcap/pd
      replicas: 3
      requests:
        storage: "10Gi"
      # storageClassName: ""
    tikv:
      image: pingcap/tikv
      replicas: 3
      requests:
        storage: "10Gi"
      # storageClassName: ""
    tidb:
      image: pingcap/tidb
      replicas: 2
      requests:
        storage: "15Gi"
      # storageClassName: ""
    initdb:
      enabled: true
      passwordData:
        apitable: "apitable@com"
        root: YXBpdGFibGVAY29t
      passwordSecret: "tidb-secret"
      # InitSqlConfigMapName reference a configmap that provide init-sql,
      # take high precedence than initSql if set
      # initSqlConfigMap: tidb-init-sql
      initSql: "create database apitable;SET GLOBAL SQL_MODE='IGNORE_SPACE,NO_ENGINE_SUBSTITUTION'"
      # permitHost: "localhost"

