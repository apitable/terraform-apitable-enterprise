apiVersion: apps/v1
kind: Deployment
metadata:
  name: socket-server
  namespace: {{ .Release.Namespace }}
  labels:
    app: socket-server
  annotations:
    "helm.sh/hook-weight": "1"
spec:
  replicas: {{ .Values.app.socket_server.replicas }}
  selector:
    matchLabels:
      app: socket-server
  template:
    metadata:
      labels:
        app: socket-server
        "configmap.socket-server-env/reload": {{ if .Values.hasAutoReloadedConfigMap }}{{ include "socket_server_env" . | sha1sum }}{{ else }}"not_enabled"{{ end }}
    spec:
      nodeSelector: {{- toYaml .Values.container.node_selector | indent 8 }}
      containers:
        - name: socket-server
          image: "{{ .Values.images.registry }}/{{ default .Values.images.repository.common  .Values.images.repository.app.room_server }}/room-server:{{ default .Values.version  .Values.images.app.room_server }}"
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          envFrom:
            - configMapRef:
                name: socket-server-env
          resources:
            requests:
              cpu: {{ .Values.app.socket_server.requests.cpu }}
              memory: {{ .Values.app.socket_server.requests.memory }}     # @add_tf_local
            limits:
              cpu: {{ .Values.app.socket_server.limits.cpu }}             # @add_tf_local
              memory: {{ .Values.app.socket_server.limits.memory }}       # @add_tf_local
          livenessProbe:
            httpGet:
              path: /socket/health
              port: 3001
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 45
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /socket/health
              port: 3001
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /socket/health
              port: 3001
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: socket-server-logs
              mountPath: /home/vikadata/packages/socket-server/logs
            - name: socket-server-logs
              mountPath: /app/packages/socket-server/logs
      volumes:
        - name: socket-server-logs
          emptyDir: {}
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{- include "imagePullSecrets" . | indent 8 -}}
      {{- end }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      affinity: {{ toYaml .Values.container.affinity | indent 8 }}
      tolerations: {{ toYaml .Values.container.tolerations | indent 8 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: {{ default "25%" .Values.app.socket_server.rolling_update_max_unavailable }}
      maxSurge: {{ default "25%" .Values.app.socket_server.rolling_update_max_surge }}
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
